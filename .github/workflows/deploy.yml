name: Deploy SPA to ConoHa WING

on:
  push:
    branches: [ main ]   # ←任意ブランチで OK

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Node.js セットアップ
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    # SSH 鍵をセット（ホストキー検証の無効化強化）
    - name: Prepare and validate SSH key
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # SSH設定を追加（ホストキー検証を確実に無効化）
        cat > ~/.ssh/config << EOF
        Host *
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
            LogLevel ERROR
            IdentitiesOnly yes
        EOF
        chmod 600 ~/.ssh/config
        
        # SSH鍵の詳細確認
        echo "=== SSH Key Validation ==="
        echo "SSH key file size: $(wc -c < ~/.ssh/id_rsa) bytes"
        echo "SSH key line count: $(wc -l < ~/.ssh/id_rsa)"
        
        # SSH鍵の形式確認
        if ssh-keygen -l -f ~/.ssh/id_rsa 2>/dev/null; then
          echo "✅ SSH key format is valid"
          ssh-keygen -l -f ~/.ssh/id_rsa
        else
          echo "❌ SSH key format is invalid"
          exit 1
        fi
        
        echo "=== SSH Configuration ==="
        cat ~/.ssh/config
        ls -la ~/.ssh/
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}

    # SSH接続の段階的テスト
    - name: Test SSH authentication step by step
      run: |
        echo "=== Testing SSH Key Authentication ==="
        echo "Connection info: $SSH_USER@$SSH_HOST:$SSH_PORT"
        
        echo "1. Testing basic SSH connection..."
        ssh -o ConnectTimeout=10 -o BatchMode=yes \
          $SSH_USER@$SSH_HOST -p $SSH_PORT "echo 'SSH connection successful'" 2>&1 || echo "Basic connection test completed (exit code: $?)"
        
        echo "2. Testing directory access..."
        ssh -o ConnectTimeout=10 -o BatchMode=yes \
          $SSH_USER@$SSH_HOST -p $SSH_PORT "pwd && whoami" 2>&1 || echo "Directory access test completed (exit code: $?)"
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
        SSH_USER: ${{ secrets.SSH_USER }}

    # 依存インストール & ビルド
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build

    # ビルド結果確認
    - name: Check build output
      run: |
        ls -la dist/
        echo "Build completed successfully"

    # SSH認証が成功した場合のみ実行
    - name: Deploy only if SSH works
      run: |
        echo "Testing SSH connection before deployment..."
        if ssh -o ConnectTimeout=10 -o BatchMode=yes \
           $SSH_USER@$SSH_HOST -p $SSH_PORT "echo 'SSH connection successful'" 2>/dev/null; then
          echo "✅ SSH connection successful, proceeding with deployment..."
          
          echo "Checking/creating remote directory..."
          ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "mkdir -p $REMOTE_PATH && ls -la $REMOTE_PATH"
          
          echo "Starting rsync deployment..."
          rsync -avz --verbose --stats --human-readable --delete \
            -e "ssh -p $SSH_PORT" \
            dist/ $SSH_USER@$SSH_HOST:$REMOTE_PATH
          
          echo "✅ Deployment completed!"
          echo "Verifying deployment..."
          ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "ls -la $REMOTE_PATH"
        else
          echo "❌ SSH connection failed, skipping deployment"
          echo "Please check:"
          echo "1. SSH_KEY secret contains the correct private key"
          echo "2. The corresponding public key is registered in ConoHa WING"
          echo "3. SSH_USER, SSH_HOST, SSH_PORT are correct"
          exit 1
        fi
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
        SSH_USER: ${{ secrets.SSH_USER }}
        REMOTE_PATH: ${{ secrets.REMOTE_PATH }} 